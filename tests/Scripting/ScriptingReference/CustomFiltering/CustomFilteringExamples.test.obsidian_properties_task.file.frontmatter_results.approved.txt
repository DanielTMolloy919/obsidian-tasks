Results of custom filters



filter by function task.file.frontmatter['kanban-plugin'] !== undefined
find tasks in [Kanban Plugin](https://github.com/mgmeyers/obsidian-kanban) boards.
=>
- [ ] #task Task in 'example_kanban'
====================================================================================


filter by function task.file.frontmatter['kanban-plugin'] === undefined
find tasks NOT in [Kanban Plugin](https://github.com/mgmeyers/obsidian-kanban) boards.
=>
> - [ ] #task Task in 'blockquote'
>     - [ ] #task Task indented in 'blockquote'
> - [ ] #task Task in 'callout'
>     - [ ] #task Task indented in 'callout'
> - [ ] #task Task in 'callout_custom'
>     - [ ] #task Task indented in 'callout_custom'
> - [ ] #task Task in 'callout_labelled'
>     - [ ] #task Task indented in 'callout_labelled'
 >>> - [ ] #task Correction1
 >>> - [ ] #task Correction2
 >>> - [ ] #task Correction3
 >>> - [ ] #task Correction4
 >>> - [ ] #task Correction1
 >>> - [ ] #task Correction2
 >>> - [ ] #task Correction3
 >>> - [ ] #task Correction4
- [ ] #task Whole task in 'comments_html_style' - with commented-out tag: <!-- #i-am-ignored-by-obsidian  --> - is ignored by Obsidian's `cachedMetadata`, but Tasks recognises it
- [ ] #task Whole task in 'comments_html_style' - with commented-out link: <!-- [[comments_markdown_style]]  --> - is ignored by Obsidian's `cachedMetadata`
- [ ] #task Whole task in 'comments_markdown_style' - with commented-out tag: %% #i-am-parsed-by-obsidian  %% - is recognised by Obsidian's `cachedMetadata`
- [ ] #task Whole task in 'comments_markdown_style' - with commented-out link: %% [[comments_html_style]]  %% - is recognised by Obsidian's `cachedMetadata`
- [ ] #task Task in 'docs_sample_for_task_properties_reference' #tag-from-task-line
- [ ] #task Another task in 'docs_sample_for_task_properties_reference'
- [ ] #task Task in 'empty_yaml'
- [ ] #task parent
    - [ ] #task child
- [ ] #task parent task
    - [ ] #task child task 1
- [ ] #task root task
- [ ] #task parent task
    - [ ] #task child task 1
 - [ ] #task sibling
- [ ] #task parent
    - [ ] #task child 1
    - [ ] #task child 2
- [ ] #task parent task
    - [ ] #task child task 1
    - [ ] #task child task 2
        - [ ] #task grandchild 1
- [ ] #task parent
    - [ ] #task child 1
    - [ ] #task child 2
- [ ] #task sibling
- [ ] #task parent task
    - [ ] #task child task 1
        - [ ] #task grandchild 1
    - [ ] #task child task 2
        - [ ] #task grandchild 2
- [ ] #task parent task
    - [ ] #task child task 1
        - [ ] #task grandchild 1
    - [ ] #task child task 2
        - [ ] #task grandchild 2
- [ ] #task sibling
- [ ] #task parent task
    - [ ] #task child task 1
        - [ ] #task grandchild 1
    - [ ] #task child task 2
        - [ ] #task grandchild 2
- [ ] #task sibling
- [ ] #task sibling 1
- [ ] #task sibling 2
    - [ ] child task
- [ ] task
- [ ] parent task
        - [ ] grandchild task 1
        - [ ] grandchild task 2
        - [ ] grandchild task 3
- [ ] parent task
- [ ] parent task
        - [ ] grandchild task
- [ ] parent task
        - [ ] grandchild task
- [ ] parent task
    - [ ] child task 1
    - [ ] child task 2
- [ ] #task Task in 'jason_properties'
- [ ] #task Task in 'link_in_file_body'
- [ ] #task Task in 'link_in_file_body_with_custom_display_text'
- [ ] #task Task in 'link_in_heading'
- [ ] #task Task in 'link_in_yaml'
- [ ] #task Task in 'link_is_broken' [[broken link - do not fix me]]
- [ ] #task Todo
- [/] #task In Progress
- [x] #task Done ✅ 2024-05-26
- [-] #task Cancelled ❌ 2024-05-26
- [ ] #task task 1 starting with a hyphen
- [ ] #task task 2 starting with a hyphen
* [ ] #task task 1 starting with an asterisk
* [ ] #task task 2 starting with an asterisk
+ [ ] #task task 1 starting with a plus sign
+ [ ] #task task 2 starting with a plus sign
1. [ ] #task task 1 in a numbered list
2. [ ] #task task 2 in a numbered list
- [ ] #task Task in 'multi_line_task_and_list_item'
- [ ] #task Task in 'multiple_headings'
- [ ] #task Task in 'no_heading'
- [ ] #task Task in 'no_yaml'
- [ ] #task the only task here
- [ ] #task Task in 'yaml_1_alias'
- [ ] #task Task in 'yaml_2_aliases'
- [ ] #task Task in 'yaml_all_property_types_empty'
- [ ] #task Task in 'yaml_all_property_types_populated'
- [ ] #task Task in 'yaml_capitalised_property_name'
- [ ] #task Task in 'yaml_complex_example'
- [ ] #task Task in 'yaml_complex_example_standardised'
- [ ] #task Task in 'yaml_custom_number_property'
- [ ] #task Task in 'yaml_tags_field_added_by_obsidian_but_not_populated'
- [ ] #task Task in 'yaml_tags_had_value_then_was_emptied_by_obsidian'
- [ ] #task Task in 'yaml_tags_has_multiple_values'
- [ ] #task Task in 'yaml_tags_is_empty'
- [ ] #task Task in 'yaml_tags_is_empty_list'
- [ ] #task Task in 'yaml_tags_with_one_value_on_new_line'
- [ ] #task Task in 'yaml_tags_with_one_value_on_single_line'
- [ ] #task Task in 'yaml_tags_with_two_values_on_one_line'
- [ ] #task Task in 'yaml_tags_with_two_values_on_two_lines'
====================================================================================


filter by function task.file.frontmatter['sample_list_property'] !== undefined
find tasks in files where the list property 'sample_list_property' exists regardless of the value.
=>
- [ ] #task Task in 'docs_sample_for_task_properties_reference' #tag-from-task-line
- [ ] #task Another task in 'docs_sample_for_task_properties_reference'
- [ ] #task Task in 'yaml_all_property_types_empty'
- [ ] #task Task in 'yaml_all_property_types_populated'
====================================================================================


filter by function task.file.frontmatter.sample_list_property !== undefined
find tasks in files where the list property 'sample_list_property' exists regardless of the value.
=>
- [ ] #task Task in 'docs_sample_for_task_properties_reference' #tag-from-task-line
- [ ] #task Another task in 'docs_sample_for_task_properties_reference'
- [ ] #task Task in 'yaml_all_property_types_empty'
- [ ] #task Task in 'yaml_all_property_types_populated'
====================================================================================


filter by function task.file.frontmatter.sample_list_property?.length > 0
find tasks in files where the list property 'sample_list_property' exists and has at least one list item.
=>
- [ ] #task Task in 'docs_sample_for_task_properties_reference' #tag-from-task-line
- [ ] #task Another task in 'docs_sample_for_task_properties_reference'
- [ ] #task Task in 'yaml_all_property_types_populated'
====================================================================================


filter by function task.file.frontmatter.sample_list_property?.length === 0
find tasks in files where the list property 'sample_list_property' exists and has no list items.
=>

====================================================================================


filter by function task.file.frontmatter['creation date']?.includes('2024') ?? false
find tasks in files where the date property 'creation date' includes string '2024'.
=>
- [ ] #task Task in 'docs_sample_for_task_properties_reference' #tag-from-task-line
- [ ] #task Another task in 'docs_sample_for_task_properties_reference'
- [ ] #task Task in 'yaml_all_property_types_populated'
====================================================================================

